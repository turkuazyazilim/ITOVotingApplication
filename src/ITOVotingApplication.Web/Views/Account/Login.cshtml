@model ITOVotingApplication.Web.Models.LoginViewModel
@{
    ViewData["Title"] = "Giriş Yap";
    Layout = null;
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Seçim Uygulaması</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <script src="https://unpkg.com/lucide@latest/dist/umd/lucide.js"></script>
</head>
<body class="min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50">

    <!-- Background Pattern -->
    <div class="absolute inset-0 opacity-5" style="background-image: url('data:image/svg+xml,%3Csvg width=\'60\' height=\'60\' viewBox=\'0 0 60 60\' xmlns=\'http://www.w3.org/2000/svg\'%3E%3Cg fill=\'none\' fill-rule=\'evenodd\'%3E%3Cg fill=\'%23000000\' fill-opacity=\'0.1\'%3E%3Ccircle cx=\'7\' cy=\'7\' r=\'1\'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E');"></div>

    <div class="flex items-center justify-center min-h-screen p-4">
        <div class="w-full max-w-md relative">

            <!-- Header -->
            <div class="text-center mb-8">
                <!-- Logo Container -->
                <div class="flex justify-center mb-4">
                    <img src="~/Documents/images/logo.png"
                         alt="Company Logo"
                         class="w-40 h-40 object-contain rounded-xl"
                         style="width: 300px; height: 60px;">
                </div>
                <h1 class="text-3xl font-bold text-gray-900 mb-2">
                    ITOP Uygulaması
                </h1>
                <p class="text-gray-600">
                    Güvenli oy kullanma sistemi
                </p>
            </div>

            <!-- Login Card -->
            <div class="bg-white rounded-2xl shadow-xl border border-gray-100 p-8">
                <div class="mb-6">
                    <h2 class="text-2xl font-semibold text-gray-900 mb-2">
                        Hoş Geldiniz
                    </h2>
                    <p class="text-gray-600 text-sm">
                        Devam etmek için lütfen giriş yapın
                    </p>
                </div>

                <!-- Error Message Container -->
                <div id="errorContainer" class="hidden bg-red-50 border border-red-200 rounded-lg p-4 mb-6">
                    <div class="flex items-center">
                        <i data-lucide="alert-circle" class="h-5 w-5 text-red-500 mr-2"></i>
                        <div id="errorMessage" class="text-red-700 text-sm"></div>
                    </div>
                </div>

                <!-- Success Message Container -->
                <div id="successContainer" class="hidden bg-green-50 border border-green-200 rounded-lg p-4 mb-6">
                    <div class="flex items-center">
                        <i data-lucide="check-circle" class="h-5 w-5 text-green-500 mr-2"></i>
                        <div id="successMessage" class="text-green-700 text-sm"></div>
                    </div>
                </div>

                <!-- Login Form - AJAX Based -->
                <form id="loginForm" class="space-y-6">
                    <!-- Username -->
                    <div>
                        <label for="username" class="block text-sm font-medium text-gray-700 mb-2">
                            Kullanıcı Adı
                        </label>
                        <div class="relative">
                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                <i data-lucide="user" class="h-5 w-5 text-gray-400"></i>
                            </div>
                            <input type="text"
                                   id="username"
                                   name="username"
                                   class="block w-full pl-10 pr-3 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200"
                                   placeholder="Kullanıcı adınızı girin"
                                   required>
                        </div>
                    </div>

                    <!-- Password -->
                    <div>
                        <label for="password" class="block text-sm font-medium text-gray-700 mb-2">
                            Şifre
                        </label>
                        <div class="relative">
                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                                <i data-lucide="lock" class="h-5 w-5 text-gray-400"></i>
                            </div>
                            <input type="password"
                                   id="password"
                                   name="password"
                                   class="block w-full pl-10 pr-12 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-200"
                                   placeholder="Şifrenizi girin"
                                   required>
                            <button type="button"
                                    onclick="togglePassword()"
                                    class="absolute inset-y-0 right-0 pr-3 flex items-center transition-colors">
                                <i data-lucide="eye" id="eyeIcon" class="h-5 w-5 text-gray-400 hover:text-gray-600"></i>
                            </button>
                        </div>
                    </div>

                    <!-- Remember Me & Forgot Password -->
                    <div class="flex items-center justify-between">
                        <div class="flex items-center">
                            <input type="checkbox"
                                   id="rememberMe"
                                   name="rememberMe"
                                   class="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded transition-all">
                            <label for="rememberMe" class="ml-2 block text-sm text-gray-700 cursor-pointer select-none">
                                Beni hatırla
                            </label>
                        </div>
                        <div class="text-sm">
                            <a href="#" class="font-medium text-blue-600 hover:text-blue-500 transition-colors">
                                Şifremi unuttum
                            </a>
                        </div>
                    </div>

                    <!-- Submit Button -->
                    <button type="submit"
                            id="loginButton"
                            class="w-full flex justify-center py-3 px-4 border border-transparent rounded-lg shadow-sm text-sm font-medium text-white bg-gradient-to-r from-blue-600 to-indigo-600 hover:from-blue-700 hover:to-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-all duration-200 transform hover:scale-[1.02] disabled:opacity-50 disabled:cursor-not-allowed">
                        <span id="buttonText" class="flex items-center">
                            <i data-lucide="log-in" class="h-4 w-4 mr-2"></i>
                            Giriş Yap
                        </span>
                        <span id="loadingSpinner" class="hidden">
                            <svg class="animate-spin h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                            </svg>
                        </span>
                    </button>
                </form>

                <!-- Divider -->
                <div class="mt-6">
                    <div class="relative">
                        <div class="absolute inset-0 flex items-center">
                            <div class="w-full border-t border-gray-300"></div>
                        </div>
                        <div class="relative flex justify-center text-sm">
                            <span class="px-2 bg-white text-gray-500">Veya</span>
                        </div>
                    </div>
                </div>

                <!-- Demo Credentials -->
                <div class="mt-6">
                    <div class="bg-blue-50 border border-blue-200 rounded-lg p-4">
                        <div class="flex items-center justify-between">
                            <div>
                                <p class="text-sm font-medium text-blue-900">Demo Hesap</p>
                                <p class="text-xs text-blue-700 mt-1">
                                    <span class="font-mono">admin / admin123</span>
                                </p>
                            </div>
                            <button type="button"
                                    onclick="fillDemoCredentials()"
                                    class="text-blue-600 hover:text-blue-700 text-sm font-medium transition-colors bg-white px-3 py-1 rounded-md border border-blue-300 hover:bg-blue-50">
                                Doldur
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Footer -->
            <div class="text-center mt-8">
                <p class="text-sm text-gray-500">
                    © 2025 Seçim Uygulaması. Tüm hakları saklıdır.
                </p>
            </div>
        </div>
    </div>

    <script>
        // Initialize Lucide icons
        lucide.createIcons();

        // Check if already logged in
        document.addEventListener('DOMContentLoaded', function() {
            const token = localStorage.getItem('token');
            if (token) {
                // Token varsa dashboard'a yönlendir
                window.location.href = '/Dashboard';
            }
        });

        let isPasswordVisible = false;

        function togglePassword() {
            const passwordInput = document.getElementById('password');
            const eyeIcon = document.getElementById('eyeIcon');

            isPasswordVisible = !isPasswordVisible;

            if (isPasswordVisible) {
                passwordInput.type = 'text';
                eyeIcon.setAttribute('data-lucide', 'eye-off');
            } else {
                passwordInput.type = 'password';
                eyeIcon.setAttribute('data-lucide', 'eye');
            }

            lucide.createIcons();
        }

        function fillDemoCredentials() {
            document.getElementById('username').value = 'admin';
            document.getElementById('password').value = 'admin123';

            // Add a nice animation effect
            const inputs = [document.getElementById('username'), document.getElementById('password')];
            inputs.forEach(input => {
                input.classList.add('ring-2', 'ring-blue-500', 'ring-opacity-50');
                setTimeout(() => {
                    input.classList.remove('ring-2', 'ring-blue-500', 'ring-opacity-50');
                }, 1000);
            });
        }

        function showError(message) {
            const errorContainer = document.getElementById('errorContainer');
            const errorMessage = document.getElementById('errorMessage');
            const successContainer = document.getElementById('successContainer');

            errorMessage.textContent = message;
            errorContainer.classList.remove('hidden');
            successContainer.classList.add('hidden');

            // Auto hide after 5 seconds
            setTimeout(() => {
                errorContainer.classList.add('hidden');
            }, 5000);
        }

        function showSuccess(message) {
            const successContainer = document.getElementById('successContainer');
            const successMessage = document.getElementById('successMessage');
            const errorContainer = document.getElementById('errorContainer');

            successMessage.textContent = message;
            successContainer.classList.remove('hidden');
            errorContainer.classList.add('hidden');
        }

        function setLoading(isLoading) {
            const loginButton = document.getElementById('loginButton');
            const buttonText = document.getElementById('buttonText');
            const loadingSpinner = document.getElementById('loadingSpinner');

            if (isLoading) {
                loginButton.disabled = true;
                buttonText.classList.add('hidden');
                loadingSpinner.classList.remove('hidden');
            } else {
                loginButton.disabled = false;
                buttonText.classList.remove('hidden');
                loadingSpinner.classList.add('hidden');
            }
        }

        // Handle login form submission
        document.getElementById('loginForm').addEventListener('submit', async function(e) {
            e.preventDefault();

            const username = document.getElementById('username').value;
            const password = document.getElementById('password').value;
            const rememberMe = document.getElementById('rememberMe').checked;

            // Clear previous messages
            document.getElementById('errorContainer').classList.add('hidden');
            document.getElementById('successContainer').classList.add('hidden');

            // Show loading state
            setLoading(true);

            try {
                // API'ye login isteği gönder
                const response = await fetch('/api/auth/login', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        username: username,
                        password: password,
                        rememberMe: rememberMe
                    })
                });

                const result = await response.json();

                if (response.ok && result.success) {
                    // Token ve user bilgilerini localStorage'a kaydet
                    localStorage.setItem('token', result.data.token);
                    localStorage.setItem('user', JSON.stringify(result.data.user));

                    // Remember me seçiliyse, username'i de kaydet
                    if (rememberMe) {
                        localStorage.setItem('rememberedUsername', username);
                    } else {
                        localStorage.removeItem('rememberedUsername');
                    }

                    showSuccess('Giriş başarılı! Yönlendiriliyorsunuz...');

                    // Dashboard'a yönlendir
                    setTimeout(() => {
                        window.location.href = '/Dashboard';
                    }, 1000);
                } else {
                    // Hata mesajını göster
                    showError(result.message || 'Kullanıcı adı veya şifre hatalı!');
                    setLoading(false);
                }
            } catch (error) {
                console.error('Login error:', error);

                // Eğer API'ye ulaşılamazsa, demo modda çalış
                if (username === 'admin' && password === 'admin123') {
                    // Demo token ve user oluştur
                    const demoToken = 'demo_token_' + Date.now();
                    const demoUser = {
                        id: 1,
                        username: 'admin',
                        firstName: 'Demo',
                        lastName: 'Admin',
                        fullName: 'Demo Admin',
                        email: 'admin@demo.com',
                        roles: ['Admin']
                    };

                    localStorage.setItem('token', demoToken);
                    localStorage.setItem('user', JSON.stringify(demoUser));

                    showSuccess('Demo hesabıyla giriş yapıldı! Yönlendiriliyorsunuz...');

                    setTimeout(() => {
                        window.location.href = '/Admin/Companies';
                    }, 1000);
                } else {
                    showError('Bağlantı hatası! Lütfen daha sonra tekrar deneyin.');
                    setLoading(false);
                }
            }
        });

        // Load remembered username if exists
        document.addEventListener('DOMContentLoaded', function() {
            const rememberedUsername = localStorage.getItem('rememberedUsername');
            if (rememberedUsername) {
                document.getElementById('username').value = rememberedUsername;
                document.getElementById('rememberMe').checked = true;
            }
        });
    </script>
</body>
</html>